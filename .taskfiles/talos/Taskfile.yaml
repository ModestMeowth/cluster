---
version: "3"
vars:
  TAL_PATH: "{{.ROOT_DIR}}/talos"
  TAL_FLAGS: --env-file {{.TAL_PATH}}/talenv.sops.yaml --config-file {{.TAL_PATH}}/talconfig.yaml --out-dir {{.TAL_PATH}}/clusterconfig
tasks:
  generate-clusterconfig:
    desc: Generate clusterconfig for Talos
    aliases:
      - generate
      - gen
      - g
    cmds:
      - talhelper genconfig {{.TAL_FLAGS}} --secret-file {{.TAL_PATH}}/talsecret.sops.yaml
    preconditions:
      - test -f {{.TAL_PATH}}/talenv.sops.yaml
      - test -f {{.TAL_PATH}}/talsecret.sops.yaml
      - test -f {{.TAL_PATH}}/talconfig.yaml

  apply-clusterconfigs:
    desc: Apply clusterconfig for a Talos cluster
    aliases:
      - apply
      - a
    cmd: talhelper gencommand apply {{.TAL_FLAGS}} {{.EXTRA_FLAGS}} | sh
    vars:
      DRY_RUN: "{{.DRY_RUN}}"
      INSECURE: "{{.INSECURE}}"
      EXTRA_FLAGS: --extra-flags={{if eq "true" .INSECURE}}--insecure,{{end}}{{if eq "true" .DRY_RUN}}--dry-run,{{end}}
    preconditions:
      - test -f {{.TAL_PATH}}/talenv.sops.yaml
      - test -f {{.TAL_PATH}}/talconfig.yaml

  bootstrap:
    desc: Bootstrap cluster
    aliases:
      - b
    cmd: talhelper gencommand bootstrap {{.TAL_FLAGS}} | sh
    preconditions:
      - test -f {{.TAL_PATH}}/talconfig.yaml

  kubeconfig:
    desc: Get kubeconfig from talos
    aliases:
      - k
    cmd: talhelper gencommand kubeconfig {{.TAL_FLAGS}} --extra-flags=--force | sh
    preconditions:
      - test -f {{.TAL_PATH}}/talconfig.yaml

  reset:
    desc: Reset nodes to an unconfigured state
    aliases:
      - r
      - wipe
      - w
    cmd: talhelper gencommand reset {{.TAL_FLAGS}} | sh
