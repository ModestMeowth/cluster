---
version: "3"
tasks:
  bootstrap:
    desc: Bootstrap Talos
    summary: |
      Args:
        CONTROLLER: Controller node to run command against (required)
        FILE: Configuration to apply insecurely to initalize first host (default: talos0)
    prompt: Bootstrap Talos on the '{{.CLUSTER}}' cluster... continue?
    cmds:
      - task: apply-insecure
        vars: &vars
          CONTROLLER: "{{.CONTROLLER}}"
          FILE: '{{.FILE|default "{{.CLUSTER}}-talos0"}}'
      - task: bootstrap-etcd
        vars: *vars
      - task: fetch-kubeconfig
        vars: *vars
      - task: bootstrap-integrations
        vars: *vars
    requires:
      vars:
        - CLUSTER
        - CONTROLLER
  apply-insecure:
    desc: Apply config to CONTROLLER for initialization
    cmd: talosctl --nodes {{.CONTROLLER}} apply-config --insecure --file {{.CLUSTER_PATH}}/bootstrap/talos/clusterconfig/{{ .FILE }}.yaml
    requires:
      vars:
        - CONTROLLER
        - FILE
  bootstrap-etcd:
    desc: Bootstrap Etcd
    cmd: until talosctl --nodes {{.CONTROLLER}} bootstrap; do sleep 10; done
    requires:
      vars:
        - CONTROLLER
  bootstrap-integrations:
    desc: Bootstrap core integrations need for Talos
    cmds:
      #      - until kubectl wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done
      - helmfile --kube-context {{.CLUSTER}} --file {{.CLUSTER_PATH}}/bootstrap/helmfile.yaml apply --skip-diff-on-install --suppress-diff
      - until kubectl wait --for=condition=Ready nodes --all --timeout=600s; do sleep 10; done
    requires:
      vars:
        - CLUSTER
    preconditions:
      - which helmfile
      - sh: kubectl config get-contexts {{.CLUSTER}}
        msg: "Kubectl context {{.CLUSTER}} not found"
      - test -f {{.CLUSTER_PATH}}/bootstrap/helmfile.yaml
  fetch-kubeconfig:
    desc: Fetch kubeconfig from Talos controllers
    cmd: |
      talosctl kubeconfig --nodes {{.CONTROLLER}} \
      --force --force-context-name {{.CLUSTER}} {{.CLUSTER_PATH}}
    requires:
      vars:
        - CLUSTER
  generate-clusterconfig:
    desc: Generate clusterconfig for Talos
    cmds:
      - talhelper genconfig --env-file {{.CLUSTER_PATH}}/bootstrap/talos/talenv.sops.yaml --secret-file {{.CLUSTER_PATH}}/bootstrap/talos/talsecret.sops.yaml --config-file {{.CLUSTER_PATH}}/bootstrap/talos/talconfig.yaml --out-dir {{.CLUSTER_PATH}}/bootstrap/talos/clusterconfig
    requires:
      vars:
        - CLUSTER_PATH
    preconditions:
      - test -f {{.CLUSTER_PATH}}/bootstrap/talos/talenv.sops.yaml
      - test -f {{.CLUSTER_PATH}}/bootstrap/talos/talsecret.sops.yaml
      - test -f {{.CLUSTER_PATH}}/bootstrap/talos/talconfig.yaml
  upgrade:
    desc: Upgrade Talos version for a node
    vars:
      TALOS_VERSION:
        sh: |
          yq -r ".talosVersion" {{.CLUSTER_PATH}}/bootstrap/talos/talconfig.yaml
      TALOS_IMAGE:
        sh: |
          talhelper genurl installer \
            --env-file {{.CLUSTER_PATH}}/bootstrap/talos/talenv.sops.yaml \
            --config-file {{.CLUSTER_PATH}}/bootstrap/talos/talconfig.yaml \
            | grep {{.NODE}} \
            | awk '{split($0,u," "); print u[2]}'
    cmds:
      - talosctl upgrade --nodes {{.NODE}} --image {{.TALOS_IMAGE}}
    requires:
      vars:
        - CLUSTER
        - NODE
    preconditions:
      - test -f {{.CLUSTER_PATH}}/bootstrap/talos/talenv.sops.yaml
      - test -f {{.CLUSTER_PATH}}/bootstrap/talos/talconfig.yaml
      - msg: Talos image could not be determined for node={{.NODE}}
        sh: test -n "{{.TALOS_IMAGE}}"
  upgrade-k8s:
    desc: Upgrade Kubernetes version for a Talos Cluster
    silent: false
    vars:
      KUBERNETES_VERSION:
        sh: |
          yq -r ".kubernetesVersion" {{.CLUSTER_PATH}}/bootstrap/talos/talconfig.yaml
      TALOS_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    cmds:
      - until kubectl wait --timeout=5m --for=condition=Complete jobs --all --all-namespaces; do sleep 10; done
      - talosctl upgrade-k8s --nodes {{.TALOS_CONTROLLER}} --to {{.KUBERNETES_VERSION}}
    requires:
      vars:
        - CLUSTER
    preconditions:
      - talos config info &>/dev/null
      - talosctl --nodes {{.TALOS_CONTROLLER}} get machineconfig &>/dev/null
  apply-clusterconfigs:
    desc: Apply clusterconfig for a Talos cluster
    vars:
      CLUSTERCONFIG_FILES:
        sh: find {{.CLUSTER_PATH}}/bootstrap/talos/clusterconfig -type f -name '*.yaml' -printf '%f\n'
    cmds:
      - for:
          var: CLUSTERCONFIG_FILES
        task: _apply-machineconfig
        vars:
          filename: "{{.ITEM}}"
          hostname: |-
            {{ trimPrefix (printf "%s-" .CLUSTER) .ITEM | trimSuffix ".yaml" }}
          DRY_RUN: "{{ .DRY_RUN }}"
    requires:
      vars:
        - CLUSTER
  _apply-machineconfig:
    internal: true
    desc: Apply a single Talos machineConfig to a Talos node
    cmds:
      - talosctl apply-config --nodes "{{.hostname}}" --file {{.CLUSTER_PATH}}/bootstrap/talos/clusterconfig/{{.filename}} {{ if eq "true" .DRY_RUN }}--dry-run {{ end }}
    requires:
      vars:
        - CLUSTER
        - hostname
        - filename
    preconditions:
      - test -f {{.CLUSTER_PATH}}/bootstrap/talos/clusterconfig/{{.filename}}
