clusterName: ${clusterName}
endpoint: https://${clusterEndpointIP}:6443
# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: 1.8.2
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.31.2
additionalApiServerCertSans: &san
  - ${clusterName}.${clusterDNSSuffix}
  - 127.0.0.1
additionalMachineCertSans: *san
cniConfig:
  name: none
nodes:
  - hostname: talos0
    ipAddress: 192.168.1.2
    installDisk: /dev/vda
    controlPlane: true
    networkInterfaces:
      - &vm_nic
        deviceSelector:
          driver: virtio_net
          hardwareAddr: "52:54:*"
        addresses:
          - 192.168.1.2/24
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.1.1
        vip:
          ip: ${clusterEndpointIP}
  - hostname: talos1
    ipAddress: 192.168.1.3
    installDisk: /dev/vda
    controlPlane: true
    networkInterfaces:
      - !!merge <<: *vm_nic
        addresses:
          - 192.168.1.3/24
  - hostname: talos2
    ipAddress: 192.168.1.4
    installDisk: /dev/vda
    controlPlane: true
    networkInterfaces:
      - !!merge <<: *vm_nic
        addresses:
          - 192.168.1.4/24
controlPlane:
  patches:
    # Disable search domian everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true
    # Disable Host DNS
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false
    # KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445
    # Cluster Config
    - |-
      cluster:
        allowSchedulingOnMasters: true
        proxy:
          disabled: true
        coreDNS:
          disabled: true
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: false
    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 192.168.1.0/24
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
    # Kubelet configuration
    - |-
      machine:
        kubelet:
          nodeIP:
            validSubnets:
              - 192.168.1.0/24
    # Custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_queued_events: "65536"
          fs.inotify.max_user_instances: "8192"
          fs.inotify.max_user_watches: "524288"
          net.core.rmem_max: "7500000"
          net.core.wmem_max: "7500000"
    # UDev rules
    - |-
      machine:
        udev:
          rules:
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
